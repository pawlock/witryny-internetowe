// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pokemon {
  id Int @id @default(autoincrement())
  name String
  types PokemonType[]
  properties PokemonProperties?
  abilities PokemonAbilitiesList[]
  stats PokemonStatsList[]
}

model PokemonType {
  id Int @id @default(autoincrement())
  slot Int 
  typeId Int
  type PokemonTypeValue @relation(fields: [typeId], references: [id])
  pokemonId Int
  pokemon Pokemon @relation(fields: [pokemonId], references: [id])
}

model PokemonTypeValue {
  id Int @id @default(autoincrement())
  name String
  pokemonType PokemonType[]
}

model PokemonProperties {
  id Int @id @default(autoincrement())
  height Int
  weight Int
  description String
  pokemonId Int @unique
  pokemon Pokemon @relation(fields: [pokemonId], references: [id])
}

model PokemonAbilitiesList {
  id Int @id @default(autoincrement())
  pokemonId Int
  pokemon Pokemon @relation(fields: [pokemonId], references: [id])
  abilityId Int
  ability PokemonAbility @relation(fields: [abilityId], references: [id])
  is_hidden Boolean
  slot Int
}

model PokemonAbility {
  id Int @id @default(autoincrement())
  abilitiesList PokemonAbilitiesList[]
  name String
  url String
}

model PokemonStatsList {
  id Int @id @default(autoincrement())
  base_stat Int
  effort Int
  statId Int
  stat PokemonStat @relation(fields: [statId], references: [id])
  pokemonId Int
  pokemon Pokemon @relation(fields: [pokemonId], references: [id])
}

model PokemonStat {
  id Int @id @default(autoincrement())
  statsList PokemonStatsList[]
  name String
  url String
}
